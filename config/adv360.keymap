#include <behaviors.dtsi>
#include <dt-bindings/zmk/backlight.h>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/rgb.h>

/ {
    behaviors {
        #include "macros.dtsi"
      #include "version.dtsi"
      #ifndef VERSION_MACRO

        macro_ver: macro_ver {
            compatible = "zmk,behavior-macro";
            label = "macro_version";
            #binding-cells = <0>;
            bindings = <&kp RET>;
        };

        #endif

        hm: homerow_mods {
            compatible = "zmk,behavior-hold-tap";
            label = "HOMEROW_MODS";
            #binding-cells = <2>;
            tapping-term-ms = <200>;
            quick_tap_ms = <175>;
            flavor = "tap-preferred";
            bindings = <&kp>, <&kp>;
        };

        space: space {
            compatible = "zmk,behavior-hold-tap";
            label = "SPACE";
            #binding-cells = <2>;
            tapping-term-ms = <200>;
            quick_tap_ms = <175>;
            flavor = "balanced";
            bindings = <&mo>, <&kp>;
        };
    };

    macros {
    };

    keymap {
        compatible = "zmk,keymap";

        default_layer {
            bindings = <
&kp GRAVE        &kp N1          &kp N2           &kp N3       &kp N4        &kp N5  &tog 1                                                       &mo 3    &kp N6  &kp N7       &kp N8       &kp N9           &kp N0             &kp EQUAL
&kp PRINTSCREEN  &kp Q           &hm RIGHT_ALT W  &kp E        &kp R         &kp T   &none                                                        &none    &kp Y   &kp U        &kp I        &hm RIGHT_ALT O  &kp P              &kp MINUS
&caps_word       &hm LEFT_ALT A  &hm LMETA S      &hm LSHFT D  &hm LCTRL F   &kp G   &none           &kp ESCAPE     &none      &none  &kp ENTER   &none    &kp H   &hm RCTRL J  &hm RSHFT K  &hm RMETA L      &hm LEFT_ALT SEMI  &kp SQT
&kp NON_US_BSLH  &kp Z           &kp X            &lt 5 C      &lt 6 V       &kp B                                  &none      &none                       &kp N   &kp M        &lt 5 COMMA  &kp PERIOD       &kp FSLH           &kp NON_US_HASH
&mo 2            &kp HOME        &kp END          &kp DOWN     &kp UP_ARROW          &space 4 SPACE  &kp BACKSPACE  &none      &none  &kp DELETE  &kp TAB          &kp LEFT     &kp RIGHT    &kp PAGE_UP      &kp PAGE_DOWN      &mo 2
            >;
        };

        keypad {
            bindings = <
&kp EQUAL  &kp N1     &kp N2    &kp N3    &kp N4     &kp N5  &trans                                                   &mo 3      &kp N6  &kp KP_NUM  &kp KP_EQUAL  &kp KP_DIVIDE  &kp KP_MULTIPLY  &kp MINUS
&kp TAB    &kp Q      &kp W     &kp E     &kp R      &kp T   &none                                                    &none      &kp Y   &kp KP_N7   &kp KP_N8     &kp KP_N9      &kp KP_MINUS     &kp BSLH
&kp ESC    &kp A      &kp S     &kp D     &kp F      &kp G   &none     &kp LCTRL  &kp LALT      &kp LGUI   &kp RCTRL  &none      &kp H   &kp KP_N4   &kp KP_N5     &kp KP_N6      &kp KP_PLUS      &kp SQT
&kp LSHFT  &kp Z      &kp X     &kp C     &kp V      &kp B                        &kp HOME      &kp PG_UP                        &kp N   &kp KP_N1   &kp KP_N2     &kp KP_N3      &kp KP_ENTER     &kp RSHFT
&mo 2      &kp GRAVE  &kp CAPS  &kp LEFT  &kp RIGHT          &kp BSPC  &kp DEL    &kp END       &kp PG_DN  &kp ENTER  &kp KP_N0          &kp UP      &kp DOWN      &kp KP_DOT     &kp RBKT         &mo 2
            >;
        };

        fn {
            bindings = <
&kp F1  &kp F2  &kp F3  &kp F4  &kp F5  &kp F6  &tog 1                                      &mo 3   &kp F7  &kp F8  &kp F9  &kp F10  &kp F11  &kp F12
&trans  &trans  &trans  &trans  &trans  &trans  &none                                       &none   &trans  &trans  &trans  &trans   &trans   &trans
&trans  &trans  &trans  &trans  &trans  &trans  &none   &trans  &trans      &trans  &trans  &none   &trans  &trans  &trans  &trans   &trans   &trans
&trans  &trans  &trans  &trans  &trans  &trans                  &trans      &trans                  &trans  &trans  &trans  &trans   &trans   &trans
&trans  &trans  &trans  &trans  &trans          &trans  &trans  &trans      &trans  &trans  &trans          &trans  &trans  &trans   &trans   &trans
            >;
        };

        mod {
            bindings = <
&none  &bt BT_SEL 0  &bt BT_SEL 1  &bt BT_SEL 2  &bt BT_SEL 3  &bt BT_SEL 4  &none                                                  &trans                  &none  &none       &none       &none  &none  &none
&none  &none         &none         &none         &none         &none         &bootloader                                            &bootloader             &none  &none       &none       &none  &none  &none
&none  &none         &none         &none         &none         &none         &none        &none  &none      &bt BT_CLR  &none       &rgb_ug RGB_MEFS_CMD 5  &none  &none       &none       &none  &none  &none
&none  &none         &none         &none         &macro_ver    &none                             &none      &none                                           &none  &none       &none       &none  &none  &none
&none  &none         &none         &none         &none                       &none        &none  &none      &none       &bl BL_TOG  &rgb_ug RGB_TOG                &bl BL_INC  &bl BL_DEC  &none  &none  &none
            >;
        };

        CURSOR {
            bindings = <
&trans    &trans  &trans  &trans  &trans  &trans  &trans                                      &trans  &trans  &trans    &trans         &trans        &trans     &trans
&trans    &trans  &trans  &trans  &trans  &trans  &trans                                      &trans  &trans  &trans    &trans         &trans        &trans     &trans
&kp CAPS  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans      &trans  &trans  &trans  &trans  &kp LEFT  &kp DOWN       &kp UP_ARROW  &kp RIGHT  &trans
&trans    &trans  &trans  &trans  &trans  &trans                  &trans      &trans                  &trans  &kp HOME  &kp PAGE_DOWN  &kp PAGE_UP   &kp END    &trans
&trans    &trans  &trans  &trans  &trans          &trans  &trans  &trans      &trans  &trans  &trans          &trans    &trans         &trans        &trans     &trans
            >;
        };

        SYMBOL {
            bindings = <
&trans  &trans     &trans            &trans                &trans          &trans    &trans                                      &trans  &trans        &trans           &trans                 &trans             &trans     &trans
&trans  &trans     &kp CARET         &kp SQT               &kp AT          &kp EXCL  &trans                                      &trans  &kp QUESTION  &kp AT           &kp SQT                &kp DOLLAR         &trans     &trans
&trans  &kp UNDER  &kp LEFT_BRACKET  &kp LEFT_PARENTHESIS  &kp LEFT_BRACE  &trans    &trans  &trans  &trans      &trans  &trans  &trans  &trans        &kp RIGHT_BRACE  &kp RIGHT_PARENTHESIS  &kp RIGHT_BRACKET  &kp MINUS  &trans
&trans  &trans     &trans            &trans                &trans          &trans                    &trans      &trans                  &trans        &trans           &trans                 &trans             &trans     &trans
&trans  &trans     &trans            &trans                &trans                    &trans  &trans  &trans      &trans  &trans  &trans                &trans           &trans                 &trans             &trans     &trans
            >;
        };

        NUMBERS {
            bindings = <
&trans  &trans  &trans  &trans  &trans  &trans  &trans                                            &trans           &trans           &trans           &trans           &trans           &trans           &trans
&trans  &trans  &trans  &trans  &trans  &trans  &trans                                            &trans           &kp PERCENT      &kp KP_NUMBER_7  &kp KP_NUMBER_8  &kp KP_NUMBER_9  &trans           &trans
&trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans      &trans  &trans        &trans           &kp KP_PLUS      &kp KP_NUMBER_4  &kp KP_NUMBER_5  &kp KP_NUMBER_6  &kp KP_SUBTRACT  &trans
&trans  &trans  &trans  &trans  &trans  &trans                  &trans      &trans                                 &kp KP_ASTERISK  &kp KP_NUMBER_1  &kp KP_NUMBER_2  &kp KP_NUMBER_3  &kp KP_DIVIDE    &trans
&trans  &trans  &trans  &trans  &trans          &trans  &trans  &trans      &trans  &kp KP_EQUAL  &kp KP_NUMBER_0                   &trans           &trans           &kp KP_DOT       &trans           &trans
            >;
        };
    };
};
